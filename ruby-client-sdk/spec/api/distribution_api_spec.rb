=begin
#Testnet Secret API for Secret Network

#A REST interface for state queries, transaction generation and broadcasting.

OpenAPI spec version: 3.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DistributionApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DistributionApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DistributionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DistributionApi' do
    it 'should create an instance of DistributionApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DistributionApi)
    end
  end

  # unit tests for distribution_community_pool_get
  # Community pool parameters
  # @param [Hash] opts the optional parameters
  # @return [Array<Coin>]
  describe 'distribution_community_pool_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_delegators_delegator_addr_rewards_get
  # Get the total rewards balance from all delegations
  # Get the sum of all the rewards earned by delegations by a single delegator
  # @param delegator_addr Bech32 AccAddress of Delegator
  # @param [Hash] opts the optional parameters
  # @return [DelegatorTotalRewards]
  describe 'distribution_delegators_delegator_addr_rewards_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_delegators_delegator_addr_rewards_post
  # Withdraw all the delegator&#39;s delegation rewards
  # Withdraw all the delegator&#39;s delegation rewards
  # @param delegator_addr Bech32 AccAddress of Delegator
  # @param [Hash] opts the optional parameters
  # @option opts [WithdrawRequestBody] :withdraw_request_body 
  # @return [StdTx]
  describe 'distribution_delegators_delegator_addr_rewards_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_delegators_delegator_addr_rewards_validator_addr_get
  # Query a delegation reward
  # Query a single delegation reward by a delegator
  # @param delegator_addr Bech32 AccAddress of Delegator
  # @param validator_addr Bech32 OperatorAddress of validator
  # @param [Hash] opts the optional parameters
  # @return [Array<Coin>]
  describe 'distribution_delegators_delegator_addr_rewards_validator_addr_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_delegators_delegator_addr_rewards_validator_addr_post
  # Withdraw a delegation reward
  # Withdraw a delegator&#39;s delegation reward from a single validator
  # @param delegator_addr Bech32 AccAddress of Delegator
  # @param validator_addr Bech32 OperatorAddress of validator
  # @param [Hash] opts the optional parameters
  # @option opts [WithdrawRequestBody1] :withdraw_request_body 
  # @return [StdTx]
  describe 'distribution_delegators_delegator_addr_rewards_validator_addr_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_delegators_delegator_addr_withdraw_address_get
  # Get the rewards withdrawal address
  # Get the delegations&#39; rewards withdrawal address. This is the address in which the user will receive the reward funds
  # @param delegator_addr Bech32 AccAddress of Delegator
  # @param [Hash] opts the optional parameters
  # @return [Address]
  describe 'distribution_delegators_delegator_addr_withdraw_address_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_delegators_delegator_addr_withdraw_address_post
  # Replace the rewards withdrawal address
  # Replace the delegations&#39; rewards withdrawal address for a new one.
  # @param delegator_addr Bech32 AccAddress of Delegator
  # @param [Hash] opts the optional parameters
  # @option opts [WithdrawRequestBody2] :withdraw_request_body 
  # @return [StdTx]
  describe 'distribution_delegators_delegator_addr_withdraw_address_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_parameters_get
  # Fee distribution parameters
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'distribution_parameters_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_validators_validator_addr_get
  # Validator distribution information
  # Query the distribution information of a single validator
  # @param validator_addr Bech32 OperatorAddress of validator
  # @param [Hash] opts the optional parameters
  # @return [ValidatorDistInfo]
  describe 'distribution_validators_validator_addr_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_validators_validator_addr_outstanding_rewards_get
  # Fee distribution outstanding rewards of a single validator
  # @param validator_addr Bech32 OperatorAddress of validator
  # @param [Hash] opts the optional parameters
  # @return [Array<Coin>]
  describe 'distribution_validators_validator_addr_outstanding_rewards_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_validators_validator_addr_rewards_get
  # Commission and self-delegation rewards of a single validator
  # Query the commission and self-delegation rewards of validator.
  # @param validator_addr Bech32 OperatorAddress of validator
  # @param [Hash] opts the optional parameters
  # @return [Array<Coin>]
  describe 'distribution_validators_validator_addr_rewards_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for distribution_validators_validator_addr_rewards_post
  # Withdraw the validator&#39;s rewards
  # Withdraw the validator&#39;s self-delegation and commissions rewards
  # @param validator_addr Bech32 OperatorAddress of validator
  # @param [Hash] opts the optional parameters
  # @option opts [WithdrawRequestBody3] :withdraw_request_body 
  # @return [StdTx]
  describe 'distribution_validators_validator_addr_rewards_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
