=begin
#Testnet Secret API for Secret Network

#A REST interface for state queries, transaction generation and broadcasting.

OpenAPI spec version: 3.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

# Common files
require 'swagger_client/api_client'
require 'swagger_client/api_error'
require 'swagger_client/version'
require 'swagger_client/configuration'

# Models
require 'swagger_client/models/account'
require 'swagger_client/models/address'
require 'swagger_client/models/base_req'
require 'swagger_client/models/block'
require 'swagger_client/models/block_header'
require 'swagger_client/models/block_header_version'
require 'swagger_client/models/block_id'
require 'swagger_client/models/block_id_parts'
require 'swagger_client/models/block_last_commit'
require 'swagger_client/models/block_last_commit_precommits'
require 'swagger_client/models/block_query'
require 'swagger_client/models/block_query_block_meta'
require 'swagger_client/models/broadcast_tx_commit_result'
require 'swagger_client/models/channel'
require 'swagger_client/models/channel_closeconfirm_request_body'
require 'swagger_client/models/channel_closeinit_request_body'
require 'swagger_client/models/channel_counterparty'
require 'swagger_client/models/channel_openack_request_body'
require 'swagger_client/models/channel_openconfirm_request_body'
require 'swagger_client/models/channel_openinit_request_body'
require 'swagger_client/models/channel_opentry_request_body'
require 'swagger_client/models/channel_response'
require 'swagger_client/models/check_tx_result'
require 'swagger_client/models/client_connections_response'
require 'swagger_client/models/client_state'
require 'swagger_client/models/coin'
require 'swagger_client/models/commit'
require 'swagger_client/models/connection'
require 'swagger_client/models/connection_counterparty'
require 'swagger_client/models/connection_openack_request_body'
require 'swagger_client/models/connection_openconfirm_request_body'
require 'swagger_client/models/connection_openinit_request_body'
require 'swagger_client/models/connection_opentry_request_body'
require 'swagger_client/models/connection_paths'
require 'swagger_client/models/connection_response'
require 'swagger_client/models/consensus_state'
require 'swagger_client/models/create_client_request_body'
require 'swagger_client/models/delegation'
require 'swagger_client/models/delegation_1'
require 'swagger_client/models/delegation_2'
require 'swagger_client/models/delegation_delegator_reward'
require 'swagger_client/models/delegator_total_rewards'
require 'swagger_client/models/deliver_tx_result'
require 'swagger_client/models/deposit'
require 'swagger_client/models/duplicate_vote_evidence'
require 'swagger_client/models/evidence'
require 'swagger_client/models/evidence_value'
require 'swagger_client/models/hash'
require 'swagger_client/models/header'
require 'swagger_client/models/header_value'
require 'swagger_client/models/ibc_validator'
require 'swagger_client/models/ibc_validator_pub_key'
require 'swagger_client/models/ibcclients_consensus_state'
require 'swagger_client/models/ibcconnectionsopentry_proof_init'
require 'swagger_client/models/inline_response_200'
require 'swagger_client/models/inline_response_200_1'
require 'swagger_client/models/inline_response_200_10'
require 'swagger_client/models/inline_response_200_11'
require 'swagger_client/models/inline_response_200_2'
require 'swagger_client/models/inline_response_200_3'
require 'swagger_client/models/inline_response_200_4'
require 'swagger_client/models/inline_response_200_4_value'
require 'swagger_client/models/inline_response_200_5'
require 'swagger_client/models/inline_response_200_6'
require 'swagger_client/models/inline_response_200_7'
require 'swagger_client/models/inline_response_200_8'
require 'swagger_client/models/inline_response_200_9'
require 'swagger_client/models/inline_response_200_application_version'
require 'swagger_client/models/inline_response_200_node_info'
require 'swagger_client/models/inline_response_200_node_info_other'
require 'swagger_client/models/inline_response_200_node_info_protocol_version'
require 'swagger_client/models/kv_pair'
require 'swagger_client/models/msg'
require 'swagger_client/models/packet'
require 'swagger_client/models/packet_value'
require 'swagger_client/models/paginated_query_txs'
require 'swagger_client/models/param_change'
require 'swagger_client/models/post_deposit_body'
require 'swagger_client/models/post_proposal_body'
require 'swagger_client/models/post_proposal_body_1'
require 'swagger_client/models/post_vote_body'
require 'swagger_client/models/prefix'
require 'swagger_client/models/prefix_value'
require 'swagger_client/models/proof'
require 'swagger_client/models/proof_path'
require 'swagger_client/models/proof_path_key_path'
require 'swagger_client/models/proof_proof'
require 'swagger_client/models/proof_proof_ops'
require 'swagger_client/models/proposer'
require 'swagger_client/models/public_key'
require 'swagger_client/models/receive_packet_request_body'
require 'swagger_client/models/redelegation'
require 'swagger_client/models/redelegation_entry'
require 'swagger_client/models/root'
require 'swagger_client/models/root_value'
require 'swagger_client/models/signed_header'
require 'swagger_client/models/signing_info'
require 'swagger_client/models/std_tx'
require 'swagger_client/models/std_tx_fee'
require 'swagger_client/models/std_tx_signature'
require 'swagger_client/models/std_tx_signature_pub_key'
require 'swagger_client/models/submit_misbehaviour_request_body'
require 'swagger_client/models/supply'
require 'swagger_client/models/tally_result'
require 'swagger_client/models/tendermint_validator'
require 'swagger_client/models/text_proposal'
require 'swagger_client/models/transfer_token_request_body'
require 'swagger_client/models/tx'
require 'swagger_client/models/tx_1'
require 'swagger_client/models/tx_broadcast'
require 'swagger_client/models/tx_query'
require 'swagger_client/models/tx_query_result'
require 'swagger_client/models/unbonding_delegation'
require 'swagger_client/models/unbonding_delegation_pair'
require 'swagger_client/models/unbonding_entries'
require 'swagger_client/models/unjail_body'
require 'swagger_client/models/update_client_request_body'
require 'swagger_client/models/validator'
require 'swagger_client/models/validator_address'
require 'swagger_client/models/validator_commission'
require 'swagger_client/models/validator_description'
require 'swagger_client/models/validator_dist_info'
require 'swagger_client/models/validator_set'
require 'swagger_client/models/vote'
require 'swagger_client/models/withdraw_request_body'
require 'swagger_client/models/withdraw_request_body_1'
require 'swagger_client/models/withdraw_request_body_2'
require 'swagger_client/models/withdraw_request_body_3'

# APIs
require 'swagger_client/api/auth_api'
require 'swagger_client/api/bank_api'
require 'swagger_client/api/distribution_api'
require 'swagger_client/api/governance_api'
require 'swagger_client/api/ibc_api'
require 'swagger_client/api/mint_api'
require 'swagger_client/api/secret_rest_api'
require 'swagger_client/api/slashing_api'
require 'swagger_client/api/staking_api'
require 'swagger_client/api/supply_api'
require 'swagger_client/api/tendermint_rpc_api'
require 'swagger_client/api/transactions_api'

module SwaggerClient
  class << self
    # Customize default settings for the SDK using block.
    #   SwaggerClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
